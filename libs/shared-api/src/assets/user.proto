syntax = "proto3";

package user;

message UserResponse {
    string id = 1;
    string username = 2;
    string password = 3;
    string password_expiry = 4;
    string email = 5;
    bool email_verified = 6;
    string email_verification_code = 7;
    string email_verification_code_expiry = 8;
    int32 login_attempts = 9;
    string last_login = 10;
    string status = 11;
    string locked_until = 12;
}

message UsersResponse {
    repeated UserResponse users = 1;
}

message GetAllUserRequest {}

message GetOneUserRequest {
    string user_id = 1;
    string username = 2;
}

message UserByUsernameParams {
    string username = 1;
}

message CreateUserRequest {
    string username = 1;
    string email = 2;
    bool email_verified = 3;
    string password = 4;
    string password_expiry = 5;
}

message UpdateUserRequest {
    string user_id = 1;
    UserResponse data = 2;
}

message UpdatePasswordRequest {
    string user_id = 1;
    UpdatePasswordData data = 2;
}

message UpdatePasswordData {
    string id = 1;
    string password = 2;
    string password_expiry = 3;
    string new_password = 4;
}

message UpdateEmailRequest {
    string user_id = 1;
    UpdateEmailData data = 2;
}

message UpdateEmailData {
    string id = 1;
    string email = 2;
    bool email_verified = 6;
    string email_verification_code = 7;
    string email_verification_code_expiry = 8;
    string new_email = 9;
}

message RemoveUserRequest {
    string user_id = 1;
    RemoveUserData data = 2;
}

message RemoveUserData {
    string id = 1;
}

message RemoveUserResponse {}

service UsersService {
    rpc GetAll (GetAllUserRequest) returns (UsersResponse);
    rpc GetOneBy (GetOneUserRequest) returns (UserResponse);

    rpc Create (CreateUserRequest) returns (UserResponse);

    rpc Update (UpdateUserRequest) returns (UserResponse);
    rpc UpdatePassword (UpdatePasswordRequest) returns (UserResponse);
    rpc UpdateEmail (UpdateEmailRequest) returns (UserResponse);

    rpc Remove (RemoveUserRequest) returns (RemoveUserResponse);
}
