generator client {
    provider      = "prisma-client-js"
    output        = "client"
    binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id                          String    @id() @default(nanoid())
    username                    String    @unique(map: "uq_user_username")
    password                    String
    emailVerified               Boolean   @default(false) @map(name: "email_verified")
    loginAttempts               Int       @default(0) @map(name: "login_attempts")
    status                      String    @default("Active")
    email                       String?   @map(name: "email")
    emailVerificationCode       String?   @map(name: "email_verification_code")
    passwordExpiry              DateTime? @map(name: "password_expiry")
    emailVerificationCodeExpiry DateTime? @map(name: "email_verification_code_expiry")
    lastLogin                   DateTime? @map(name: "last_login")
    lockedUntil                 DateTime? @map(name: "locked_until")

    roles UserRole[]

    @@map(name: "users")
}

model UserRole {
    userId String @map(name: "user_id")
    roleId String @map(name: "role_id")

    user User @relation(fields: [userId], references: [id], map: "fk_user_role", onDelete: Cascade)

    @@id(fields: [userId, roleId], name: "pk_user_role")
    @@map(name: "user_role")
}
